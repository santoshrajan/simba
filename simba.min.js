import produce from"https://unpkg.com/immer/dist/immer.module.js";const isGenericObject=obj=>"[object Object]"===Object.prototype.toString.call(obj),state=Symbol("state"),props=Symbol("props"),id=Symbol("id"),uniqueElemId=function(){let last=Date.now();return function(){const time=Date.now();return last=time>last?time:last+1}}(),findById=(val,node)=>{if(node[id]===val)return node;for(let elem of node.children){let found=findById(val,elem);if(found)return found}return null};export const H=(tag,props={},...children)=>{if(isGenericObject(props)||(children.unshift(props),props={}),"function"==typeof tag)return tag(props);const elem=document.createElement(tag);for(let[key,value]of Object.entries(props))"style"===key?elem.style.cssText=value:elem[key]=value;return children.length>0&&R(...children,elem),elem};export const R=(...nodes)=>{const mountNode=nodes.pop();for(let elem of nodes){let type=typeof elem;"string"!==type&&"number"!==type||(elem=document.createTextNode(elem)),mountNode.appendChild(elem)}};export const CreateComponent=render=>init=>{let patches=[];const comp=setState=>{if(isGenericObject(setState)){const ret=render(setState,comp[state]);return ret[id]=uniqueElemId(),comp[id]=ret[id],comp[props]=setState,ret}if(comp[state]=produce(comp[state],setState,p=>{patches=p}),patches.length>0){const newNode=render(comp[props],comp[state]),oldNode=findById(comp[id],document.body);newNode[id]=oldNode[id],oldNode.parentNode.replaceChild(newNode,oldNode)}};return comp[state]=init||{},comp[props]={},comp};
